//Name of a directory (under ./hadoop-resources) that will has hadoop conf that dev cluster will spawn with.
//Make sure you create the folder as a copy of the default conf at ./hadoop-resources/cluster-default, which has
//the minimum configuration to spawn a cloud CDH cluster.

//You can then add your own configurations to the specific conf-xml file as you like.
//Variables you may use include $master (will be replaced by the cluster master hostname)
//and $local (will be replaced by the local node's host name).
hadoop.conf.dir = ""

//Comma separated list of jars needed to be added to Hive aux jar path on dev clusters and gateways.
//These need to be placed under ./hadoop-resources/aux-jars
hive.aux.jars = [
  ""
]

//CDH version to download.
//For now we only support CDH5 repositories of ubuntu trusty.
//This would have to be a valid version listed under:
//http://archive.cloudera.com/cdh5/ubuntu/trusty/amd64/cdh/dists/
hadoop.version = cdh5.5.0
base.os = ubuntu-trusty


//For docker
local {
  // This is comma-delimited list of dockerFiles located under
  //./docker/contrib-cluster.  Must start with 'FROM dev_cluster/local'.
  docker.files = [
  ]
  docker.containerId = "id"
  
  //Comma separated list of additional ports to be opened on the local cluster container.
  //Port specs are of the form "$port_description/$portNum"
  //$port_description is optional, and is used for display in command list-local.
  ports = [
    "SampleAppWeb/7000",
    "SampleAppAdmin/7001"
  ]
  cluster.user = "root"
}

//For AWS
aws {
  //The user to use to ssh into the dev cluster.
  //This is determined by the base Ubuntu image(s) specified in base.image.id.
  user = ubuntu

  access.id = ${AWS_ACCESS_ID}
  
  access.key = ${AWS_ACCESS_KEY}

  //Instance type to use in dev cluster.
  instance.type = m4.2xlarge
  
  //Comma-separated list of $device=$size<
  volume.spec = "/dev/sda1=100"

  //If true and target.aws.volume.spec is set to a list of volumes in addition to root volume,
  //then extra volumes will be automatically mounted on the instance, and configured to be balanced
  //on each data node.
  //volume.spec = "/dev/sda1=50, /dev/sdb=1000, /dev/sdc=1000, /dev/sdd=1000, /dev/sde=1000, /dev/sdf=1000"
  auto.volumes = true

  //AWS region in which instances will be spawned
  region = eu-west-1
  
  //AWS subnet in which instances will be spawned
  subnet = ""
  
  //AWS security group instances to be assigned to
  security.group = ""
  
  //Name of AWS security key pair instances will be spawned with.  The corresponding key must be provided.
  key.pair = my_key_pair
  key.file = ./path/to/key
  
  //Public Ubuntu 14.04 public image of eu-west data center.
  base.image.id = ami-ed82e39e

}

s3.bucket.prefix = dev-cluster